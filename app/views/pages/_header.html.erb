<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Savanna Lingo</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    /* Unique prefixes used: sl- */
    :root {
      --primary: #3b82f6;
      --primary-dark: #2563eb;
      --secondary: #10b981;
      --dark: #1e293b;
      --light: #f8fafc;
      --gray: #64748b;
      --light-gray: #f1f5f9;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background-color: var(--light);
      color: var(--dark);
      line-height: 1.6;
    }

    header {
      background-color: white;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      position: sticky;
      top: 0;
      z-index: 100;
    }

    .sl-container {
      width: 90%;
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 20px;
    }

    .sl-nav {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1.5rem 0;
      position: relative;
    }

    .sl-logo {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-weight: 700;
      font-size: 1.5rem;
      color: var(--primary);
      text-decoration: none;
    }

    .sl-logo img {
      height: 40px;
      width: auto;
    }

    .sl-nav-center {
      display: flex;
      align-items: center;
      gap: 2rem;
    }

    .sl-nav-links {
      display: flex;
      gap: 2rem;
      list-style: none;
    }

    .sl-nav-links a {
      text-decoration: none;
      color: var(--dark);
      font-weight: 500;
      position: relative;
      transition: all 0.3s ease;
    }

    .sl-nav-links a:hover {
      color: var(--primary);
    }

    .sl-nav-links a.active {
      color: var(--primary);
    }

    .sl-nav-links a.active::after {
      content: '';
      position: absolute;
      bottom: -5px;
      left: 0;
      width: 100%;
      height: 2px;
      background-color: var(--primary);
    }

    .sl-auth-buttons {
      display: flex;
      gap: 1rem;
      align-items: center;
    }

    .sl-auth-btn {
      background-color: var(--primary);
      color: white;
      padding: 0.6rem 1.2rem;
      border: none;
      border-radius: 5px;
      text-decoration: none;
      font-weight: 500;
      font-size: 0.9rem;
      transition: all 0.3s ease;
      cursor: pointer;
      display: inline-block;
    }

    .sl-auth-btn:hover {
      background-color: var(--primary-dark);
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(59, 130, 246, 0.3);
    }

    .sl-auth-btn.secondary {
      background-color: transparent;
      color: var(--primary);
      border: 2px solid var(--primary);
    }

    .sl-auth-btn.secondary:hover {
      background-color: var(--primary);
      color: white;
    }

    .sl-logout-btn {
      background-color: #dc2626;
      color: white;
      padding: 0.6rem 1.2rem;
      border: none;
      border-radius: 5px;
      font-weight: 500;
      font-size: 0.9rem;
      cursor: pointer;
      text-decoration: none;
      transition: all 0.3s ease;
    }

    .sl-logout-btn:hover {
      background-color: #b91c1c;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(220, 38, 38, 0.3);
    }

    .sl-mobile-menu-btn {
      display: none;
      background: none;
      border: none;
      font-size: 1.5rem;
      cursor: pointer;
      color: var(--dark);
    }

    @media (max-width: 768px) {
  .sl-mobile-menu-btn {
    display: block;
  }

  .sl-nav-center {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background-color: white;
    flex-direction: column;
    align-items: flex-start;
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.4s ease;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
    z-index: 999;
  }

  .sl-nav-center.active {
    max-height: 90vh;         /* Limit max height to 90% of screen */
    overflow-y: auto;         /* Enable scroll when needed */
  }

  .sl-nav-links {
    flex-direction: column;
    width: 100%;
  }

  .sl-nav-links li {
    width: 100%;
  }

  .sl-nav-links a {
    display: block;
    padding: 1rem 2rem;
    border-bottom: 1px solid var(--light-gray);
    width: 100%;
  }

  .sl-auth-buttons {
    flex-direction: column;
    gap: 0.5rem;
    padding: 1rem 2rem;
    width: 100%;
  }

  .sl-auth-btn,
  .sl-logout-btn {
    width: 100%;
    text-align: center;
  }
}

  </style>
</head>
<body>

<header>
  <div class="sl-container">
    <nav class="sl-nav">
      <a href="<%= root_path %>" class="sl-logo">
        <%= image_tag("logo.jpeg", alt: "Savanna Lingo Ltd Logo") %>
        <span>Savanna Lingo</span>
      </a>

      <button class="sl-mobile-menu-btn">â‰¡</button>

      <div class="sl-nav-center">
        <ul class="sl-nav-links">
          <li><%= link_to 'Home', root_path, class: "active" %></li>
          <li><%= link_to 'About', about_path %></li>
          <li><%= link_to 'Posts', stories_path %></li>
          <li><%= link_to 'Books', books_path %></li>

          <% if user_signed_in? %>
            <% if current_user.user_role == 'admin' %>
              <li><%= link_to "Posts", posts_path %></li>
              <li><%= link_to "Admin Dashboard", rails_admin_path %></li>
            <% elsif current_user.user_role == 'blogger' %>
              <li><%= link_to "My Posts", posts_path %></li>
            <% end %>
          <% end %>
        </ul>

        <div class="sl-auth-buttons">
          <% if user_signed_in? %>
            <%= button_to 'Logout', destroy_user_session_path, method: :delete, class: 'sl-logout-btn' %>

          <% else %>
            <%= link_to "Login", new_user_session_path, class: "sl-auth-btn secondary" %>
            <%= link_to "Register", new_user_registration_path, class: "sl-auth-btn" %>
          <% end %>
        </div>
      </div>
    </nav>
  </div>
</header>

<script>
  document.addEventListener('turbo:load', () => {
  const mobileMenuBtn = document.querySelector('.sl-mobile-menu-btn');
  const navCenter = document.querySelector('.sl-nav-center');

  if (!mobileMenuBtn || !navCenter) return;

  // Remove old listeners by cloning
  const newBtn = mobileMenuBtn.cloneNode(true);
  mobileMenuBtn.parentNode.replaceChild(newBtn, mobileMenuBtn);

  newBtn.addEventListener('click', () => {
    navCenter.classList.toggle('active');
  });

  const navItems = document.querySelectorAll('.sl-nav-links a');
  navItems.forEach(item => {
    item.addEventListener('click', () => {
      navCenter.classList.remove('active');
    });
  });
});

  
</script>


</body>
</html>
